{
    "openapi": "3.0.0",
    "info": {
        "title": "pilot4collector api documentation",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "api-documentation"
        }
    ],
    "paths": {
        "/commands/store": {
            "post": {
                "tags": [
                    "command"
                ],
                "summary": "Store a new command",
                "description": "Creates a new command and returns it.",
                "operationId": "storeCommand",
                "requestBody": {
                    "description": "Pass command details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "productIds",
                                    "customerName",
                                    "customerPhoneNumber",
                                    "preparationTime",
                                    "specificInstructions",
                                    "totalPrice"
                                ],
                                "properties": {
                                    "productIds": {
                                        "type": "string",
                                        "format": "json",
                                        "example": "['prod1', 'prod2']"
                                    },
                                    "customerName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "customerPhoneNumber": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "preparationTime": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "specificInstructions": {
                                        "type": "string",
                                        "example": "Leave at the door"
                                    },
                                    "totalPrice": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Command created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Command created successfully!"
                                        },
                                        "command": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/logIn": {
            "post": {
                "tags": [
                    "UserController"
                ],
                "summary": "Log in a user",
                "operationId": "619d3fd3886d7e1d69b2becee9d182e5",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorisation": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "your_jwt_token_here"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            }
        }
    }
}